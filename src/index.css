@layer reset, base, layouts, components, utilities;

@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    /* outline: green 1px solid; */
  }

  * {
    margin: 0;
    padding: 0;
    font: inherit;
    /* Get rid of all font sizes and heights */
  }

  html {
    color-scheme: dark light;
    /* Default dark */
    hanging-punctuation: first last;
    /* Not supported in Chrome */
  }

  body {
    min-height: 100vh;
  }

  /* Media responsive */
  img,
  picture,
  svg,
  video {
    display: block;
    max-width: 100%;
  }

  h1, h2, h3, h4, h5, h6 {
    text-wrap: balance;
  }

  p {
    max-width: 75ch;
    text-wrap: pretty;
    /* Prevents orphans on lines */
  }

  h1, h2, h3, h4, h5, h6, p, span, a {
    color: var(--clr-primary);
  }

  @media (prefers-reduced-motion: no-preference) {
    :has(:target) {
      scroll-behavior: smooth;
      scroll-padding-top: 3rem;
    }
  }
}

@layer base {
  :root {
    font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
    color-scheme: light dark;
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    --clr-primary: #fff;
    --clr-secondary: #000;
    --clr-terciary: #202020;

    --clr-meter-display-boundary: #d3d3d3;

    --min-col-width: 25rem;
    --border-radius-primary: 1rem;
  }

  @media (prefers-color-scheme: light) {
    :root {
      --clr-primary: #000;
      --clr-secondary: #fff;
    }
  }
}

@layer layouts {
  main {
    min-height: 100svh;
    display: grid;
    place-items: center;
    grid-template-columns: 1fr 1fr;
    gap: 5rem;
    background-color: var(--clr-secondary);
  }

  @media (width < 50rem) {
    main {
      grid-template-columns: 1fr;
    }

    section:first-child {
      display: none;
    }
  }
}

@layer components {
  .meter {
    --padding: 2rem;
    --aspect-ratio: calc(3 / 4);

    aspect-ratio: var(--aspect-ratio);
    width: min(100% - var(--padding), (100svh - var(--padding)) * var(--aspect-ratio));

    display: flex;
    flex-direction: column;

    background-color: var(--clr-terciary);
    border-radius: var(--border-radius-primary);

    /* box-shadow: 0 0 1rem rgba(0, 0, 0, 0.2); */
    box-shadow: inset 0 0 3rem rgba(255, 255, 255, 0.2);

    > * {
      flex: 1 1 0;
    }
  }

  .meter__display {
    --margin: 8%;

    display: grid;
    overflow: hidden;

    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);

    margin-block-start: var(--margin);
    margin-inline: var(--margin);
    border-radius: var(--border-radius-primary);
    background-color: var(--clr-primary);
  }

  .meter__display__boundary {
    /* custom properties exposed to Meter component */
    --column-start: 1;
    --boundary-rotate: 20deg;

    grid-column-start: var(--column-start);
    align-self: center;
    justify-self: center;

    grid-row: 1 / span 3;
    width: 1rem;
    height: 100%;

    background-color: var(--clr-meter-display-boundary);
    rotate: var(--boundary-rotate);
  }

  .meter__display__level {
    --arc-length: 120deg;
    --arc-start: -60deg;
    --arc-thickness: 20px;
  
    grid-column: 1 / 4;
    grid-row-start: 1;
    
    width: 100%;
    aspect-ratio: 1;
    padding: var(--arc-thickness);
    border-radius: 50%;
    background: #c0d860;

    /* https://css-shape.com/arc/ */
    mask:
      linear-gradient(#0000 0 0) content-box intersect,
      conic-gradient(#000 var(--arc-length),#0000 0);

    /* https://css-tricks.com/better-css-shapes-using-shape-part-2-more-on-arcs/  */

    rotate: var(--arc-start);
  }

  @supports (clip-path: shape(from 0 0, line to 100% 0, line to 100% 100%, line to 0 100%)) {
    .meter__display__level {
      background: red;
      /* mask: none; */
      /* TODO */
    }
  }

}